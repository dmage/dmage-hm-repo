#!/bin/bash
# vim: set ts=4 sts=4 sw=4 noet :
set -euo pipefail

E_OPTERROR=85

while getopts ":r:l:h:" Option; do
case $Option in
r)
	REAL_ROOT=$OPTARG
	;;
l)
	REAL_LOGIN=$OPTARG
	;;
h)
	REAL_HOST=$OPTARG
	;;
esac
done
shift $(($OPTIND - 1))

if [ $# -eq 0 ]; then
	echo "Usage: $0 [-r ROOT] [-l LOGIN] [-h HOSTNAME] packages..." >&2
	exit $E_OPTERROR
fi

. "$(dirname "$(test -L "$0" && readlink "$0" || echo "$0")")/hm-funcs.bash"

if [ "x${REAL_ROOT:-}" = "x" ]; then
	eval "$(
		(
			echo "printf 'REAL_ROOT=%q\n' \$HOME"
		) | real_bash || echo "exit $?"
	)"
	if [ "x${REAL_ROOT:-}" = "x" ]; then
		echo "$0: Unable to discover \$HOME value. Use -r ROOT option." >&2
		exit 1
	else
		echo "$(prefix ">>>") Discovered ROOT: $REAL_ROOT"
	fi
fi

REAL_HM_DIR="$REAL_ROOT/.hm"
REAL_INDEX="$REAL_HM_DIR/index"
REAL_FILES_DIR="$REAL_HM_DIR/files"
REAL_BACKUP_ROOT="$REAL_HM_DIR/backup/root/$(date +%Y%m%d-%H%M%S)"
REAL_BACKUP_FILES_DIR="$REAL_HM_DIR/backup/files/$(date +%Y%m%d-%H%M%S)"

PKGS=("$@")

for PKG in "${PKGS[@]}"; do
	schedule_pkg "$PKG"
done

real_discover

fake_init
fake_install

rsync_files_dir
rsync_root
rsync_index

fake_cleanup

real_remote
